package com.hotusm.thread.detail.book;
/**
 * 
 *1.最低安全性的意思是说  即使因为各个线程的读写不同  但是获取的数据至少是上一次某一个线程的值
 *最低安全性对于大多数的值来说都是满足的  但是对于没有设置为volatile的64位被看成了两个32位的读操作和写操作
 *除非加上volatile关键字
 *2.volatile能够保证内存的可见性  这个时候就不会在每一个线程的变量中都缓存一份  而是共用一份数据
 *  2.1并不是什么情况下都适合使用volatile关键字的  因为使用太多的话  会增加线程的维护成本，
 *     volatile关键字用法:确保自身的可见性，以及引用的可见性 ，还有就是确保一些重要程序的生命周期
 *     只能保证可见性  并不能够保证其原子性
 */
public class Bit64 {
	
}
